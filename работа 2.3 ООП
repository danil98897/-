import random 

class Data:
    def __init__(self, *info):
        self.info = list(info)
 
    def __getitem__(self, i):
        return self.info[i]
 
 
class Teacher:
    def __init__(self):
        self.work = 0
 
    def teach(self, info, *pupil):
        for i in pupil:
            i.take(info)
            self.work += 1
 
 
class Pupil:
    def __init__(self):
        self.knowledge = []
 
    def take(self, info):
        self.knowledge.append(info)
        
    def forgot(self):
        self.knowledge.remove(random.choice(self.knowledge))
        
    def print(self):
        print(self.knowledge)
        
lesson = Data('class', 'object', 
'inheritance', 'polymorphism', 
'encapsulation')
pety = Pupil()
pety.print()
pety.take(lesson[3])
pety.take(lesson[1])
pety.take(lesson[2])
pety.print()
pety.forgot()
pety.print()
